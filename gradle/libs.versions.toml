[versions]
kotlin = "1.6.10"
detekt = "1.19.0"
ktor = "2.0.0-beta-1"
logback = "1.2.11"
hikari = "5.0.1"
sqldelight = "1.5.3"
bouncycastle = "1.70"
kotlinx-coroutines = "1.6.0"
kotlinx-datetime = "0.3.2"
shadow = "7.1.2"
kotlin-react = "17.0.2-pre.321-kotlin-1.6.10"
kotlin-react-router-dom = "6.2.1-pre.321-kotlin-1.6.10"
krypto-js = "2.6.3"
better-parse = "0.4.3"
kotlinx-serialization = "1.3.2"
kotlinx-murmurhash = "0.4.0"
kotlin-power-assert = "0.11.0"
kotlinx-benchmark = "0.4.2"
kotlinx-kover = "0.4.4"
dokka = "1.6.10"
mkdocs = "2.2.0"
mkdocs-plugin-awesome-pages = "2.6.1"
node = "16.13.2"

[libraries]
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-engine-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-engine-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor"}
ktor-client-engine-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-kotlinx-cbor = { module = "io.ktor:ktor-serialization-kotlinx-cbor", version.ref = "ktor" }
ktor-resources = { module = "io.ktor:ktor-resources", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
sqldelight-driver-sqlite = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
bouncycastle = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bouncycastle" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlin-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "kotlin-react" }
kotlin-react-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "kotlin-react"}
kotlin-react-css = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-css", version.ref = "kotlin-react"}
kotlin-react-router-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom", version.ref = "kotlin-react-router-dom"}
krypto-js = { module = "com.soywiz.korlibs.krypto:krypto-js", version.ref = "krypto-js" }
better-parse = { module = "com.github.h0tk3y.betterParse:better-parse", version.ref = "better-parse" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-murmurhash = { module = "com.goncalossilva:murmurhash", version.ref = "kotlinx-murmurhash" }
kotlinx-benchmark-runtime = { module = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime", version.ref = "kotlinx-benchmark" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

[bundles]
server-ktor = ["ktor-server-core", "ktor-server-cio", "logback-classic", "ktor-server-resources", "ktor-serialization-kotlinx-json", "ktor-serialization-kotlinx-cbor", "ktor-server-content-negotiation", "ktor-server-call-logging", "ktor-server-cors", "ktor-server-default-headers", "ktor-server-compression", "ktor-server-auth", "ktor-server-status-pages", "ktor-server-sessions"]
server-database = ["hikari", "sqldelight-driver-sqlite", "sqldelight-coroutines-extensions", "bouncycastle", "kotlinx-datetime"]
client-ktor = ["ktor-client-core", "ktor-client-resources", "ktor-serialization-kotlinx-json", "ktor-client-content-negotiation"]
client-react = ["kotlin-react", "kotlin-react-dom", "kotlin-react-css", "kotlin-react-router-dom"]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
kotlin-power-assert = { id = "com.bnorm.power.kotlin-power-assert", version.ref = "kotlin-power-assert" }
kotlinx-benchmark = { id = "org.jetbrains.kotlinx.benchmark", version.ref = "kotlinx-benchmark" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
mkdocs = { id = "ru.vyarus.mkdocs", version.ref = "mkdocs" }
